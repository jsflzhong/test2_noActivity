<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.jsflzhong.test2_noactivity">
    <!-- 当代码访问一些隐私数据时, 需要在这里配置对应的权限. -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".persistence.sample1.PersisMainActivity"></activity>
        <activity android:name=".layout.LoginMainActivity" />
        <activity android:name=".layout.LoginActivity">

            <!-- 把程序的主页面变成登录页面. -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".layout.broadcast.sender.MyLocalBroadcastSenderActivity" />
        <activity android:name=".layout.broadcast.sender.MyStandardSenderActivity" />

        <receiver
            android:name=".layout.broadcast.receiver.MyStandardReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>

                <!-- 该字符串,与com.jsflzhong.test2_noactivity.FirstActivity.loadButton31中定义的字符串一致就可以,不用单独创建这个类. -->
                <action android:name="com.jsflzhong.test2.noactivity.MY_BROADCAST" />
            </intent-filter>
        </receiver>
        <!--
            如果用IDE生成receiver,则这里会自动生成.(但是如果想开机启动,还需要手痛添加<intent-filter>节点.
            Exported 属性表示是否允许这个广播接收器接收本程序以外的广播，
            Enabled 属性表示是否启用这个广播接收器
        -->
        <receiver
            android:name=".layout.broadcast.receiver.BootCompleteReceiver"
            android:enabled="true"
            android:exported="true">

            <!--
                由于Android系统启动完成后会发出一条值为android.intent.action.BOOT_COMPLETED的广播，
                因此我们在<intent-filter> 标签里添加了相应的action。
                另外，监听系统开机广播也是需要声明权限的，可以看到，
                我们使用<uses-permission> 标签又加入了一条android.permission.RECEIVE_BOOT_COMPLETED 权限.
            -->
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <activity android:name=".layout.broadcast.receiver.BroadNetWorkActivity" />
        <activity android:name=".layout.MsgActivity" />
        <activity android:name=".layout.NinePatchActivity" />
        <activity android:name=".layout.RecyclerViewStaggeredGridActivity" />
        <activity android:name=".layout.RecyclerViewLinearRollingActivity" />
        <activity android:name=".layout.RecyclerViewActivity" />
        <activity android:name=".layout.ListViewActivity2" />
        <activity android:name=".layout.ListViewActivity" />
        <activity android:name=".layout.RelativeLayoutActivity2" />
        <activity android:name=".layout.RelativeLayoutActivity1" />
        <activity android:name=".layout.LinearLayoutActivity2" />
        <activity android:name=".layout.LinearLayoutActivity1" />
        <activity android:name=".ui.UIActivity_1" /> <!-- 指定让DialogActivity使用"对话框"式的主题 -->
        <activity
            android:name=".lifeCycle.DialogActivity"
            android:theme="@style/Theme.AppCompat.Dialog" />
        <activity android:name=".lifeCycle.NormalActivity" /> <!-- 注册活动(IDE自动生成外层),指定目标java类; 并配置主活动(固定格式) -->
        <activity
            android:name=".FirstActivity"
            android:label="This is FirstActivity"
            android:launchMode="singleTop">
            <intent-filter>

                <!-- <action android:name="android.intent.action.MAIN" /> -->

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".SecondActivity">
            <intent-filter>

                <!-- 表示:当前activity活动可以响应"com.example.activitytest.ACTION_START"这个action. -->
                <!-- 注意: 字符串需要与activity中的new Intent中的字符串相匹配 -->
                <!-- 该action,是被firstActivity中调用的,即,在firstActivity中点击按钮时,会跳转到本secondActivity的layout中 -->
                <action android:name="com.example.activitytest.ACTION_START" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.MY_CATEGORY" />
            </intent-filter>
        </activity>
        <activity android:name=".ThirdActivity">
            <intent-filter tools:ignore="AppLinkUrlError">

                <!-- 让第三个activity可以打开网页(伪) -->
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="http" />
            </intent-filter>
        </activity>
    </application>

</manifest>